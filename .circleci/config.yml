# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:latest

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    environment:
      - NODE_ENV: development

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      # Disable this for now since our only tests require lighthouse
      # - run: npm test

      - run:
          command: |
            git clone git@github.com:UF-Enrollment-Management/css-release.git dist
            cd dist
            git config user.email "webmaster@admissions.ufl.edu"
            git config user.name "Deployment Bot"
            git fetch --all --tags
            git checkout origin/"${CIRCLE_BRANCH}"
            git checkout -B "${CIRCLE_BRANCH}"
            cd ../

      # run build!
      - run: npm run clean
      - run: npm run build
      - run: mkdir -p workspace

      - store_artifacts:
          path: dist.zip
          destination: dist.zip

      - add_ssh_keys:
          fingerprints:
            - "35:c7:13:ad:9a:35:8c:e9:15:ef:ac:d9:89:e6:5b:ef"

      - run:
          command: |
            cd dist
            git status
            git add --update .
            git add .
            git commit --allow-empty -m "Releasing branch $CIRCLE_BRANCH"
            git tag -a "$CIRCLE_BRANCH-$(echo $CIRCLE_SHA1 | cut -c -7)" -m "$CIRCLE_BRANCH"
            git push --set-upstream origin ${CIRCLE_BRANCH} --tags

  deploy:
    machine:
        enabled: true
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace

      - store_artifacts:
          path: /tmp/workspace/dist.zip
          destination: dist.zip

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          context: admissions
          filters:
            branches:
              only:
                - test
                - master
                - test-releases
                - dev
